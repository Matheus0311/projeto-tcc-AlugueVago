<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Cadastro de Imóveis</title>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.14.0/css/all.min.css">
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.15/dist/tailwind.min.css" rel="stylesheet">
</head>
<style>
  
  
  .input-container {
    position: relative;
    margin-bottom: 1rem;
  }
  .input-container label {
    font-weight: 600;
    color: #4a90e2;
    margin-bottom: 0.25rem;
  }
  .input-container input,
  .input-container select,
  .input-container textarea {
    width: 100%;
    padding: 0.5rem;
    border: 1px solid #ccc;
    border-radius: 0.25rem;
    transition: border-color 0.3s;
  }
  .input-container input:focus,
  .input-container select:focus,
  .input-container textarea:focus {
    outline: none;
    border-color: #4a90e2;
  }
  .input-container .helper-text {
    font-size: 0.75rem;
    color: #999;
    margin-top: 0.25rem;
  }
  .upload-container {
    border: 2px dashed #ccc;
    border-radius: 0.25rem;
    padding: 1rem;
    text-align: center;
    transition: border-color 0.3s;
  }
  .upload-container:hover {
    border-color: #4a90e2;
  }
  .upload-container p {
    font-size: 0.875rem;
    color: #999;
    margin: 0.5rem 0;
  }

  .dropdown-menu.right-0 {
    right: 0;
    left: auto;
  }
  
  .dropdown-menu.left-0 {
    left: 0;
    right: auto;
  }
  
  @media (max-width: 768px) {
    .dropdown-menu.left-0, .dropdown-menu.right-0 {
      right: auto;
      left: 0;
    }
  }
  


  .profile-image {
    margin-top: 20px;
    text-align: center;
  }

  .profile-image img {
    width: 100px;
    height: 100px;
    border-radius: 50%;
  }

  /* Estilos para a imagem de perfil na navbar */
  .profile-image-navbar {
    width: 30px;
    height: 30px;
    border-radius: 50%;
    margin-right: 10px;
    margin-top: 5px;
  }

  /* Estilos para a animação do link na navbar */
  .nav-link {
    position: relative;
    display: inline-block;
    color: #ffffff;
    transition: color 0.3s;
  }
  .nav-link:hover {
    color: #fff;
  }
  .nav-link::before {
    content: "";
    position: absolute;
    width: 0;
    height: 2px;
    background-color: white;
    bottom: -4px;
    left: 50%;
    transform: translateX(-50%);
    transition: width 0.3s;
  }
  .nav-link:hover::before {
    width: 100%;
  }
  .navbar {
    background-color: #4a90e2;
  }


  .error-message {
    color: red; 
    font-size: 14px; 
  }

  .button-container {
    display: flex;
    justify-content: space-between; 
    flex-wrap: wrap; 
  }
  
  .button-container button {
    margin: 0 5px; 
    margin-bottom: 10px; 
  }
  
  .cancel-button {
    margin-left: auto; 
  }
  
  
  .register-button{
    margin-right: auto;
  }

  
  .fade-in {
    opacity: 1;
    transform: scale(1);
    transition: opacity 0.5s ease-in, transform 0.5s ease-in;
  }
  
  .fade-out {
    opacity: 0;
    transform: scale(0.95);
    transition: opacity 0.5s ease-out, transform 0.5s ease-out;
  }

  #divform{
    margin-bottom: 20px;
  }

  .nav-link.dropdown-toggle.flex.items-center {
    color: white;
  }

</style>
<body class="bg-gray-100">
<!-- Navbar -->
<nav class="navbar navbar-expand-lg bg-gradient-to-r from-blue-300 to-blue-500 navbar-light bg-light">
    <div class="container-fluid">
      <a class="text-2xl font-semibold text-white hover:text-blue-300" href="/">AlugueVago</a>
      <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav"
        aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav ml-auto">
          <li class="nav-item">
            <a class="nav-link text-white" href="/">Home</a>
          </li>
          <li class="nav-item dropdown relative">
            <a class="nav-link dropdown-toggle flex items-center" href="#" id="favoritesDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
              <i class="fas fa-star text-white mr-2"></i> Favoritos  <span id="favoritesCount" class="badge badge-pill badge-primary">0</span>
            </a>
            
            <div class="dropdown-menu hidden absolute right-0 mt-2 w-70 bg-white border rounded-md shadow-lg group-hover:block" aria-labelledby="favoritesDropdown">
              <div id="favoritesList"></div>
            </div>
          </li>
          <% if (userIsLoggedIn) { %>
           
            <li class="nav-item dropdown relative">
              <a class="nav-link dropdown-toggle flex items-center" href="#" id="profileDropdownToggle" role="button" data-toggle="dropdown"
                aria-haspopup="true" aria-expanded="false">
                <span class="text-white"><%= user.nomeUsuario %></span>
              </a>  
              <div class="dropdown-menu hidden absolute right-0 mt-2 w-28 bg-white border rounded-md shadow-lg group-hover:block" aria-labelledby="profileDropdownToggle">
                <a class="block px-4 py-2 text-gray-800 hover:bg-gray-100 text-decoration-none" href="/imoveis/meus-imoveis">Meus Imoveis</a>
                <a class="block px-4 py-2 text-gray-800 hover:bg-gray-100 text-decoration-none" href="/users/account-config">Configuração de Conta</a>
                <a class="block px-4 py-2 text-gray-800 hover:bg-gray-100 text-decoration-none" href="/users/logout">Deslogar</a>
              </div>
            </li>
            <div>
              <% if (user.imagemPerfil) { %>
                <img class="profile-image-navbar" src="/users/<%= user.imagemPerfil %>" alt="Imagem de Perfil" />
              <% } else { %>
                <i class="profile-image-navbar fas fa-user-circle fa-2x bg-blue-300 text-gray-500"></i>
              <% } %>
            </div>            
            <% } else { %>
            <li class="nav-item">
              <a class="nav-link profile-link text-white" href="/users/login">
                <i class="fas fa-user"></i>
                Fazer Login
              </a>
              <li><a class="nav-link text-white" href="/users/cadastro">Cadastro</a></li>
            </li>
          <% } %>
          
        </ul>
      </div>
    </div>
  </nav>
  <div class="container mx-auto mt-4" id="divform">
    <div class="bg-white p-8 rounded-lg shadow-md max-w-4xl mx-auto">
      <h1 class="text-2xl font-semibold text-center mb-6">Cadastro de Imóveis</h1>
      <% if (errorMessages && errorMessages.length > 0) { %>
        <div class="bg-red-100 text-red-700 p-3 rounded mb-4">
          <% for (const errorMessage of errorMessages) { %>
            <%= errorMessage %><br />
          <% } %>
        </div>
      <% } %>
  
      <form action="/imoveis/cadastro-imovel" method="POST" enctype="multipart/form-data" id="imovelForm">
     
        
        
        
        <div class="grid grid-cols-1 md:grid-cols-1 gap-4">
          <section class="step" data-step="1">
            <!-- Parte 1 - Informações do Imóvel -->
            <h2 class="text-lg font-semibold mb-4 border-b pb-2">Informações do Imóvel (1/4)</h2>
          <div>
            <!-- Tamanho -->
            <div class="input-container">
              <label for="tamanho">Tamanho (m²): <span class="text-red-500">*</span> 
                <span class="info-icon" title="Informe o tamanho do imóvel">
                  <i class="text-gray-500 cursor-pointer">&#9432;</i>
                </span>
              </label>
              <input type="number" id="tamanho" name="tamanho" class="rounded-md focus:border-blue-500" 
              title="Informe o tamanho do imóvel" value="400"
              required >
              <div class="error-message" id="tamanhoError"></div>
            </div>
            <!-- Quantidade de Cômodos -->
            <div class="input-container">
              <label for="quantidadeComodos">Quantidade de Cômodos: <span class="text-red-500">*</span>
                <span class="info-icon" title="Informe a quantidade cômodos">
                  <i class="text-gray-500 cursor-pointer">&#9432;</i>
                </span>
              </label>

              <input type="number" id="quantidadeComodos" name="quantidadeComodos" class="rounded-md focus:border-blue-500" 
              title="Informe a quantidade cômodos" value="4"
              required>
              <div class="error-message" id="quantidadeComodosError"></div>
            </div>
            <!-- Mobiliado -->
            <div class="input-container">
              <label for="mobiliado">Mobiliado: <span class="text-red-500">*</span> 
                <span class="info-icon" title="Informe se o imóvel é mobiliado">
                  <i class="text-gray-500 cursor-pointer">&#9432;</i>
                </span>
              </label>
              <select id="mobiliado" name="mobiliado" class="rounded-md focus:border-blue-500" 
              title="Informe se o imóvel é mobiliado" required>
              <div class="error-message" id="mobiliadoError"></div>
                <option value="" >Escolha a opção</option>
                <option value="1" selected>Sim</option>
                <option value="0">Não</option>
              </select>
              <div class="error-message" id="mobiliadoError"></div>
            </div>
            <!-- Status de Negociação -->
            <div class="input-container">
              <label for="statusNegociacao">Status de Negociação: <span class="text-red-500">*</span> 
                <span class="info-icon" title="Informe se o imóvel já está sendo negociado">
                  <i class="text-gray-500 cursor-pointer">&#9432;</i>
                </span>
              </label>
              <select id="statusNegociacao" name="statusNegociacao" class="rounded-md focus:border-blue-500" 
              title="Informe se o imóvel já está sendo negociado"
              required>
              <div class="error-message" id="statusNegociacaoError"></div>
                <option value=""  >Escolha a opção</option>
                <option value="1" selected>Disponível</option>
                <option value="0">Indisponível</option>
              </select>
              <div class="error-message" id="statusNegociacaoError"></div>
            </div>
            <!-- Valor -->
            <div class="input-container">
              <label for="valor">Valor Mensal: <span class="text-red-500">*</span> 
                <span class="info-icon" title="Informe o valor mensal do aluguel do imóvel">
                  <i class="text-gray-500 cursor-pointer">&#9432;</i>
                </span>
              </label>
              <input type="number" id="valor" name="valor" class="rounded-md focus:border-blue-500" 
              title="Informe o valor mensal do aluguel do imóvel" value="1200"
              required>
              <div class="error-message" id="valorError"></div>

            </div>
            <!-- RG do Proprietário -->
            <div class="input-container">
              <label for="rgProprietario">
                RG: <span class="text-red-500">*</span>
                <span class="info-icon" title="Digite um RG válido com 8 a 9 dígitos">
                  <i class="text-gray-500 cursor-pointer">&#9432;</i>
                </span>
              </label>
              <input
                type="text"
                id="rgProprietario"
                name="rgProprietario"
                placeholder="Digite sem pontuação"
                class="rounded-md focus:border-blue-500"
                maxlength="9"
                required
                pattern="[0-9]{8,9}"
                title="Digite um RG válido com 8 a 9 dígitos" value="12345678"
              />
              <div class="error-message" id="rgError"></div>
            </div>
            <!-- CPF do Proprietário -->
            <div class="input-container">
              <label for="cpfProprietario">
                CPF: <span class="text-red-500">*</span>
                <span class="info-icon" title="Digite um CPF válido com 11 dígitos">
                  <i class="text-gray-500 cursor-pointer">&#9432;</i>
                </span>
              </label>
              <input
                type="text"
                id="cpfProprietario"
                name="cpfProprietario"
                placeholder="Digite sem pontuação"
                class="rounded-md focus:border-blue-500"
                maxlength="11"
                required
                pattern="[0-9]{11}"
                title="Digite um CPF válido com 11 dígitos" value="12345678909"
              />
              <div class="error-message" id="cpfError"></div>
            </div>

            <!-- Número de Inscrição -->
            <div class="input-container">
              <label for="numeroInscricao">Número de Inscrição do Imóvel: <span class="text-red-500">*</span> 
                <span class="info-icon" title="Informe o número de inscrição do imóvel. Vem estampado na capa do carnê do IPTU">
                  <i class="text-gray-500 cursor-pointer">&#9432;</i>
                </span>
              </label>
              <input type="text" id="numeroInscricao" name="numeroInscricao" class="rounded-md focus:border-blue-500" placeholder="Digite sem pontuação" 
              title="Informe o número de inscrição do imóvel. Vem estampado na capa do carnê do IPTU" value="1234567"
              required>
              <div class="error-message" id="numeroInscricaoError"></div>

            </div>
            
          </div>
          <div class="button-container">
            <button type="button" class="next-step bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 transition duration-300">
              Continuar
            </button>
            <button
              type="button"
              onclick="window.location.href='/imoveis/meus-imoveis'"
              class="cancel-button bg-yellow-400 text-white py-2 px-4 rounded-md hover:bg-yellow-500 duration-300"
            >
              Cancelar
            </button>
          </div>          

          </section>
          <section class="step hidden" data-step="2">
          <div>
            <h2 class="text-lg font-semibold mb-4 border-b pb-2">Informações do Imóvel (2/4)</h2>
            <!-- Título -->
            <div class="input-container">
              <label for="titulo">Título do Imóvel <span class="text-red-500">*</span>
                <span class="info-icon" title="Informe uum título para o imóvel com 3 a 200 caracteres">
                  <i class="text-gray-500 cursor-pointer">&#9432;</i>
                </span>
              </label>
              <textarea id="titulo" name="titulo" class="rounded-md focus:border-blue-500" rows="3"  maxlength="200"
              required
              title="Informe um titulo para o imóvel com 3 a 200 caracteres"
              pattern=".{3,200}">Uma casa perto da Unigran</textarea>
              <div class="error-message" id="descricaoError"></div>
            </div>

            <!-- Descrição -->
            <div class="input-container">
              <label for="descricao">Descrição <span class="text-red-500">*</span>
                <span class="info-icon" title="Informe uma pequena descrição com 3 a 200 caracteres">
                  <i class="text-gray-500 cursor-pointer">&#9432;</i>
                </span>
              </label>
              <textarea id="descricao" name="descricao" class="rounded-md focus:border-blue-500" rows="4"  maxlength="200"
              required
              title="Informe uma pequena descrição com 3 a 200 caracteres"
              pattern=".{3,200}">Casa bem cuidada e próxima dos melhores pontos da cidade</textarea>
              <div class="error-message" id="descricaoError"></div>
            </div>
            <!-- Fotos do Imóvel -->
            <div class="upload-container">
              <label for="fotos" class="block text-gray-700 font-semibold mb-2">Fotos (até 6 fotos): <span class="text-red-500">*</span>
                <span class="info-icon" title="Forneça até 6 imagens do imóvel, de preferência do mesmo tamanho">
                  <i class="text-gray-500 cursor-pointer">&#9432;</i>
                </span>
              </label>
              <div class="relative">
                <input type="file" id="fotos" name="fotos" class="absolute inset-0 w-full h-full opacity-0 cursor-pointer" multiple accept="image/*" onchange="limitarFotos(this)" required>
                <p id="fotosLabel">Clique para selecionar fotos</p>
              </div>
              <div class="error-message" id="fotosError"></div>
            </div>
            <!-- Documentos do Imóvel -->
            <div class="upload-container">
              <label for="pdfDocument" class="block text-gray-700 font-semibold mb-2">PDF Document: <span class="text-red-500">*</span>
                <span class="info-icon" title="Forneça 1 PDF com os documentos principais do imóvel (Escritura)">
                  <i class="text-gray-500 cursor-pointer">&#9432;</i>
                </span>
              </label>
              <div class="relative">
                <input type="file" id="pdfDocument" name="pdfDocument" class="absolute inset-0 w-full h-full opacity-0 cursor-pointer" accept=".pdf" onchange="updatePDFLabel(this)" required>
                <p id="pdfDocumentLabel">Clique para selecionar um PDF</p>
              </div>
            </div>
          <br>
          </div>
         
          <div class="button-container">
            <button type="button" class="prev-step bg-gray-300 text-black py-2 px-4 rounded-md hover:bg-gray-400 hover:text-white transition duration-300" style="margin-right: 10px;">
              Voltar
            </button>
            <button type="button" class="next-step bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 transition duration-300">
              Continuar
            </button>
            <button
              type="button"
              onclick="window.location.href='/imoveis/meus-imoveis'"
              class="cancel-button bg-yellow-400 text-white py-2 px-4 rounded-md hover:bg-yellow-500 duration-300"
            >
              Cancelar
            </button>
          </div>
          
          
          </section>
          <section class="step hidden" data-step="3">

          <div>
            <h2 class="text-lg font-semibold mb-4 border-b pb-2">Informações do Imóvel (3/4)</h2>
             <!-- Tipo de Imóvel -->
             <div class="input-container">
              <label for="tipoImovel">Tipo de Imóvel: <span class="text-red-500">*</span> 
                <span class="info-icon" title="Informe o tipo do imóvel">
                  <i class="text-gray-500 cursor-pointer">&#9432;</i>
                </span>
              </label>
              <select id="tipoImovel" name="tipoImovel" class="rounded-md focus:border-blue-500" 
              title="Informe o tipo do imóvel"
              required>
              <div class="error-message" id="tipoImovelError"></div>
                <option value="" >Escolha o tipo</option>
                <option value="Salão">Salão Comercial</option>
                <option value="Casa" selected>Casa</option>
                <option value="Apartamento">Apartamento</option>
                <option value="Chácara">Chácara</option>
                <option value="Loft">Loft</option>
                <option value="Studio">Studio</option>
                <option value="Condomínio">Casa em Condomínio</option>
                <option value="Quitinete">Quitinete</option>
                <option value="Flat">Flat</option>
              </select>
              <div class="error-message" id="tipoImovelError"></div>
            </div>
            <!-- Grande -->
            <div class="input-container">
              <label for="grande">Grande: <span class="text-red-500">*</span> 
                <span class="info-icon" title="Informe se o imóvel é considerado grande (só aparecerá esse atributo se for verdadeiro)">
                  <i class="text-gray-500 cursor-pointer">&#9432;</i>
                </span>
              </label>
              <select id="grande" name="grande" class="rounded-md focus:border-blue-500" 
              title="Informe se o imóvel é considerado grande (só aparecerá esse atributo se for verdadeiro)"
              required>
                <option value="" >Escolha a opção</option>
                <option value="1" selected>Sim</option>
                <option value="0">Não</option>
              </select>
              <div class="error-message" id="grandeError"></div>
            </div>
            <!-- Bem Localizado -->
            <div class="input-container">
              <label for="bemLocalizado">Bem Localizado: <span class="text-red-500">*</span> 
                <span class="info-icon" title="Informe se o imóvel é bem localizado (só aparecerá esse atributo se for verdadeiro)">
                  <i class="text-gray-500 cursor-pointer">&#9432;</i>
                </span>
              </label>
              <select id="bemLocalizado" name="bemLocalizado" class="rounded-md focus:border-blue-500" 
              title="Informe se o imóvel é bem localizado (só aparecerá esse atributo se for verdadeiro)"
              required>
                <option value="" >Escolha a opção</option>
                <option value="1" selected>Sim</option>
                <option value="0">Não</option>
              </select>
              <div class="error-message" id="bemLocaalizadoError"></div>
            </div>
            <!-- Condomínio Fechado -->
            <div class="input-container">
              <label for="condominioFechado">Condomínio Fechado: <span class="text-red-500">*</span> 
                <span class="info-icon" title="Informe se o imóvel é em condomínio fechado (só aparecerá esse atributo se for verdadeiro)">
                  <i class="text-gray-500 cursor-pointer">&#9432;</i>
                </span>
              </label>
              <select id="condominioFechado" name="condominioFechado" class="rounded-md focus:border-blue-500" 
              title="Informe se o imóvel é em condomínio fechado (só aparecerá esse atributo se for verdadeiro)"
              required>
                <option value="" >Escolha a opção</option>
                <option value="1" selected>Sim</option>
                <option value="0">Não</option>
              </select>
              <div class="error-message" id="condominioFechadoError"></div>
            </div>
            <!-- Novo -->
            <div class="input-container">
              <label for="novo">Novo: <span class="text-red-500">*</span> 
                <span class="info-icon" title="Informe se o imóvel é novo(só aparecerá esse atributo se for verdadeiro)">
                  <i class="text-gray-500 cursor-pointer">&#9432;</i>
                </span>
              </label>
              <select id="novo" name="novo" class="rounded-md focus:border-blue-500" 
              title="Informe se o imóvel é novo(só aparecerá esse atributo se for verdadeiro)"
              required>
                <option value="" >Escolha a opção</option>
                <option value="1" selected>Sim</option>
                <option value="0">Não</option>
              </select>
              <div class="error-message" id="novoError"></div>
            </div>
            <!-- Estacionamento -->
            <div class="input-container">
              <label for="estacionamento">Estacionamento: <span class="text-red-500">*</span> 
                <span class="info-icon" title="Informe se o imóvel tem estacionamento(só aparecerá esse atributo se for verdadeiro)">
                  <i class="text-gray-500 cursor-pointer">&#9432;</i>
                </span>
              </label>
              <select id="estacionamento" name="estacionamento" class="rounded-md focus:border-blue-500" 
              title="Informe se o imóvel tem estacionamento(só aparecerá esse atributo se for verdadeiro)"
              required>
                <option value="" >Escolha a opção</option>
                <option value="1" selected>Sim</option>
                <option value="0">Não</option>
              </select>
              <div class="error-message" id="estacionamentoError"></div>
            </div>
            <!-- Água Gratuita -->
            <div class="input-container">
              <label for="aguaGratuita">Água Inclusa: <span class="text-red-500">*</span> 
                <span class="info-icon" title="Informe se a água é inclusa(só aparecerá esse atributo se for verdadeiro)">
                  <i class="text-gray-500 cursor-pointer">&#9432;</i>
                </span>
              </label>
              <select id="aguaGratuita" name="aguaGratuita" class="rounded-md focus:border-blue-500" 
              title="Informe se a água é inclusa(só aparecerá esse atributo se for verdadeiro)"
              required>
                <option value="" >Escolha a opção</option>
                <option value="1" selected>Sim</option>
                <option value="0">Não</option>
              </select>
              <div class="error-message" id="aguaGratuitaError"></div>
            </div>
            <!-- IPTU Incluso -->
            <div class="input-container">
              <label for="iptuIncluso">IPTU Incluso: <span class="text-red-500">*</span> 
                <span class="info-icon" title="Informe se o IPTU é incluso(só aparecerá esse atributo se for verdadeiro)">
                  <i class="text-gray-500 cursor-pointer">&#9432;</i>
                </span>
              </label>
              <select id="iptuIncluso" name="iptuIncluso" class="rounded-md focus:border-blue-500" 
              title="Informe se o IPTU é incluso(só aparecerá esse atributo se for verdadeiro)"
              required>
                <option value="" >Escolha a opção</option>
                <option value="1" selected>Sim</option>
                <option value="0">Não</option>
              </select>
              <div class="error-message" id="iptuInclusoError"></div>
            </div>
          </div>
          <div class="button-container">
            <button type="button" class="prev-step bg-gray-300 text-black py-2 px-4 rounded-md hover:bg-gray-400 hover:text-white transition duration-300" style="margin-right: 10px;">
              Voltar
            </button>
            <button type="button" class="next-step bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 transition duration-300">
              Continuar
            </button>
            <button
              type="button"
              onclick="window.location.href='/imoveis/meus-imoveis'"
              class="cancel-button bg-yellow-400 text-white py-2 px-4 rounded-md hover:bg-yellow-500 duration-300"
            >
              Cancelar
            </button>
          </div>          
          </section>
        </div>
        

        <section class="step hidden" data-step="4">
    <!-- Parte 2 e 3 - Informações de Endereço e Contato -->
        <div class="grid grid-cols-1 md:grid-cols-1 gap-4 mt-6">
          <!-- Seção 2 - Informações de Endereço -->
          <div class="md:col-span-2">

            <h2 class="text-lg font-semibold mb-4 border-b pb-2">Informações de Imovel (4/4) - Endereço e Contato</h2>
              
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
              <!-- Coluna 1 - Endereço -->
              <div>
                <!-- CEP -->
                <div class="input-container">
                  <label for="enderecoCEP">CEP: <span class="text-red-500">*</span> 
                    <span class="info-icon" title="Informe o CEP correto">
                      <i class="text-gray-500 cursor-pointer">&#9432;</i>
                    </span>
                  </label>
                  <input type="text" id="enderecoCEP" name="enderecoCEP" class="rounded-md focus:border-blue-500" placeholder="Digite sem pontuação" 
                  title="Informe o CEP correto" value="79824170"
                  required>
                  <div class="error-message" id="enderecoCEPError"></div>

                </div>
                <!-- Cidade -->
                <div class="input-container">
                  <label for="enderecoCidade">Cidade: <span class="text-red-500">*</span> 
                    <span class="info-icon" title="Informe a cidade correta">
                      <i class="text-gray-500 cursor-pointer">&#9432;</i>
                    </span>
                  </label>
                  <input type="text" id="enderecoCidade" name="enderecoCidade" class="rounded-md focus:border-blue-500" 
                  title="Informe a cidade correta" value="Dourados"
                  required>
                  <div class="error-message" id="enderecoCidadeError"></div>

                </div>
                <!-- Estado -->
                <div class="input-container">
                  <label for="estadoNome">Estado: <span class="text-red-500">*</span> 
                    <span class="info-icon" title="Informe o estado correto">
                      <i class="text-gray-500 cursor-pointer">&#9432;</i>
                    </span>
                  </label>
                  <select id="estadoNome" name="estadoNome" class="rounded-md focus:border-blue-500" 
                  title="Informe o estado correto"
                  required>
                    <option value=""  >Selecione o estado</option>
                    <option value="AC">Acre</option>
                    <option value="AL">Alagoas</option>
                    <option value="AP">Amapá</option>
                    <option value="AM">Amazonas</option>
                    <option value="BA">Bahia</option>
                    <option value="CE">Ceará</option>
                    <option value="DF">Distrito Federal</option>
                    <option value="ES">Espírito Santo</option>
                    <option value="GO">Goiás</option>
                    <option value="MA">Maranhão</option>
                    <option value="MT">Mato Grosso</option>
                    <option value="MS" selected>Mato Grosso do Sul</option>
                    <option value="MG">Minas Gerais</option>
                    <option value="PA">Pará</option>
                    <option value="PB">Paraíba</option>
                    <option value="PR">Paraná</option>
                    <option value="PE">Pernambuco</option>
                    <option value="PI">Piauí</option>
                    <option value="RJ">Rio de Janeiro</option>
                    <option value="RN">Rio Grande do Norte</option>
                    <option value="RS">Rio Grande do Sul</option>
                    <option value="RO">Rondônia</option>
                    <option value="RR">Roraima</option>
                    <option value="SC">Santa Catarina</option>
                    <option value="SP">São Paulo</option>
                    <option value="SE">Sergipe</option>
                    <option value="TO">Tocantins</option>
                  </select>
                </div>
              </div>
              <!-- Coluna 2 - Endereço -->

              <div>
                <!-- Rua -->
                <div class="input-container">
                  <label for="enderecoRua">Rua: <span class="text-red-500">*</span> 
                    <span class="info-icon" title="Informe a rua correta">
                      <i class="text-gray-500 cursor-pointer">&#9432;</i>
                    </span>
                  </label>
                  <input type="text" id="enderecoRua" name="enderecoRua" class="rounded-md focus:border-blue-500" 
                  title="Informe a rua correta" value="Rua Gustavo Adolfo Pável"
                  required>
                  <div class="error-message" id="enderecoRuaError"></div>

                </div>
                <!-- Número -->
                <div class="input-container">
                  <label for="enderecoNumero">Número: <span class="text-red-500">*</span> 
                    <span class="info-icon" title="Informe o número do imóvel correto">
                      <i class="text-gray-500 cursor-pointer">&#9432;</i>
                    </span>
                  </label>
                  <input type="text" id="enderecoNumero" name="enderecoNumero" class="rounded-md focus:border-blue-500" 
                  title="Informe o número do imóvel correto" value="340"
                  required>
                  <div class="error-message" id="enderecoNumeroError"></div>

                </div>
                <!-- Bairro -->
                <div class="input-container">
                  <label for="enderecoBairro">Bairro: <span class="text-red-500">*</span> 
                    <span class="info-icon" title="Informe o bairro correto">
                      <i class="text-gray-500 cursor-pointer">&#9432;</i>
                    </span>
                  </label>
                  <input type="text" id="enderecoBairro" name="enderecoBairro" class="rounded-md focus:border-blue-500" 
                  title="Informe o bairro correto" value="Jardim Itaipú"
                  required>
                  <div class="error-message" id="enderecoBairroError"></div>

                </div>
              </div>
              
            </div>
          </div>
          <!-- Seção 3 - Informações de Contato -->
          <div class="md:col-span-2">
            <h2 class="text-lg font-semibold mb-4 border-b pb-2">
              Informações de Contato
            </h2>
            <!-- Telefone de Contato -->
            <div class="input-container">
              <label for="telefoneContato">Telefone de Contato: <span class="text-red-500">*</span> 
                <span class="info-icon" title="Digite um telefone para contato válido">
                  <i class="text-gray-500 cursor-pointer">&#9432;</i>
                </span></label>
              <input value="121221212" type="tel" id="telefoneContato" name="telefoneContato" class="rounded-md focus:border-blue-500" placeholder="DDD e Número sem pontuação" required>
            </div>
            <!-- Email de Contato -->
            <div class="input-container">
              <label for="emailContato">
                Email: <span class="text-red-500">*</span>
                <span class="info-icon" title="Digite um nome email válido com @ e .">
                  <i class="text-gray-500 cursor-pointer">&#9432;</i>
                </span>
              </label>
              <input
                type="email"
                id="emailContato"
                name="emailContato"
                class="rounded-md focus:border-blue-500"
                placeholder="exemplo@exemplo.com"
                required
                title="Digite um email válido com @ e ." value="bracin@exemplo.com"
              />
              <div class="error-message" id="emailError"></div>
            </div>
          </div>
        </div>

        <div class="button-container">
          <button type="button" class="prev-step bg-gray-300 text-black py-2 px-4 rounded-md hover:bg-gray-400 hover:text-white transition duration-300" style="margin-right: 10px;">
            Voltar
          </button>
          <button type="submit" class="register-button bg-green-500 text-white py-2 px-4 rounded-md hover:bg-green-600 transition duration-300">
            Cadastrar
          </button>
          <button
            type="button"
            onclick="window.location.href='/imoveis/meus-imoveis'"
            class="cancel-button bg-yellow-400 text-white py-2 px-4 rounded-md hover:bg-yellow-500 duration-300 ml-2"
          >
            Cancelar
          </button>
        </div>
    </section>
   
    </form>
  </div>
</div>

<script>
  function limitarFotos(input) {
    const maxFotos = 6;
    const fotosSelecionadas = input.files.length;

    if (fotosSelecionadas > maxFotos) {
      alert(`Você pode selecionar no máximo ${maxFotos} fotos.`);
      input.value = ''; 
    }

    document.getElementById('fotosLabel').textContent = `Você selecionou ${fotosSelecionadas} de ${maxFotos} fotos.`;
  }
</script>

<script>
  const steps = document.querySelectorAll('.step');
  const nextButtons = document.querySelectorAll('.next-step');
  const prevButtons = document.querySelectorAll('.prev-step');
  const lastStep = document.querySelector('.step[data-step="4"]');
  const penultimo = document.querySelector('.step[data-step="3"]');

  nextButtons.forEach(button => {
    button.addEventListener('click', () => {
      const currentStep = button.closest('.step');
      const nextStep = currentStep.nextElementSibling;
  
      if (validateFields()) { 
        currentStep.classList.add('fade-out');
        setTimeout(() => {
          currentStep.classList.add('hidden');
          currentStep.classList.remove('fade-out');
          if (nextStep) {
            nextStep.classList.remove('hidden');
            nextStep.classList.add('fade-in');
          } else if (currentStep === penultimo) {
            lastStep.classList.remove('hidden');
            lastStep.classList.add('fade-in');
          }
        }, 300); // Tempo em milissegundos para a transição
      }
    });
  });
  
  prevButtons.forEach(button => {
    button.addEventListener('click', () => {
      const currentStep = button.closest('.step');
      const currentIndex = Array.from(steps).indexOf(currentStep);
  
      if (currentIndex > 0) {
        const prevStep = steps[currentIndex - 1];
        currentStep.classList.add('fade-out');
        setTimeout(() => {
          currentStep.classList.add('hidden');
          currentStep.classList.remove('fade-out');
          prevStep.classList.remove('hidden');
          prevStep.classList.add('fade-in');
        }, 300); // Tempo em milissegundos para a transição
      } else if (currentStep === lastStep) {
        currentStep.classList.add('fade-out');
        setTimeout(() => {
          currentStep.classList.add('hidden');
          currentStep.classList.remove('fade-out');
          penultimo.classList.remove('hidden');
          penultimo.classList.add('fade-in');
        }, 300); // Tempo em milissegundos para a transição
      }
    });

  
  });

function validateFields() {
  let isValid = true;
  const currentStep = document.querySelector('.step:not(.hidden)');

  if (currentStep.dataset.step === '1') {
    // Validação para a primeira etapa (Informações do Imóvel - Parte 1)
    const tamanhoInput = document.getElementById('tamanho');
    const quantidadeComodosInput = document.getElementById('quantidadeComodos');
    const mobiliadoSelect = document.getElementById('mobiliado');
    const statusNegociacaoSelect = document.getElementById('statusNegociacao');
    const valorInput = document.getElementById('valor');
    const rgProprietarioInput = document.getElementById('rgProprietario');
    const cpfProprietarioInput = document.getElementById('cpfProprietario');
    const numeroInscricaoInput = document.getElementById('numeroInscricao');

    if (tamanhoInput.value <= 0) {
      isValid = false;
      displayError(tamanhoInput, 'O tamanho deve ser maior que 0');
    }

    if (quantidadeComodosInput.value <= 0) {
      isValid = false;
      displayError(quantidadeComodosInput, 'A quantidade de cômodos deve ser maior que 0');
    }

    if (mobiliadoSelect.value === '') {
      isValid = false;
      displayError(mobiliadoSelect, 'Selecione se o imóvel é mobiliado ou não');
    }

    if (statusNegociacaoSelect.value === '') {
      isValid = false;
      displayError(statusNegociacaoSelect, 'Selecione o status de negociação do imóvel');
    }

    if (valorInput.value <= 0) {
      isValid = false;
      displayError(valorInput, 'O valor mensal deve ser maior que 0');
    }

    if (!validateRG(rgProprietarioInput.value)) {
      isValid = false;
      displayError(rgProprietarioInput, 'Digite um RG válido com 8 ou 9 dígitos');
    }

    if (!validateCPF(cpfProprietarioInput.value)) {
      isValid = false;
      displayError(cpfProprietarioInput, 'Digite um CPF válido com 11 dígitos');
    }

    if (numeroInscricaoInput.value <= 6) {
      isValid = false;
      displayError(numeroInscricaoInput, 'Informe o número de inscrição do imóvel');
    }
  } else if (currentStep.dataset.step === '2') {
    // Validação para a segunda etapa (Informações do Imóvel - Parte 2)
    const tituloTextarea = document.getElementById('titulo');
    const descricaoTextarea = document.getElementById('descricao');
    const fotosInput = document.getElementById('fotos');
    const pdfDocumentInput = document.getElementById('pdfDocument');

    if (tituloTextarea.value.length < 3 || tituloTextarea.value.length > 200) {
      isValid = false;
      displayError(tituloTextarea, 'O título deve ter entre 3 e 200 caracteres');
    }

    if (descricaoTextarea.value.length < 3 || descricaoTextarea.value.length > 200) {
      isValid = false;
      displayError(descricaoTextarea, 'A descrição deve ter entre 3 e 200 caracteres');
    }

    if (!validateFileExtensions(fotosInput, ['jpg', 'jpeg', 'png'])) {
      isValid = false;
      displayError(fotosInput, 'Selecione até 6 imagens no formato JPG, JPEG ou PNG');
    }

    if (!validateFileExtensions(pdfDocumentInput, ['pdf'])) {
      isValid = false;
      displayError(pdfDocumentInput, 'Selecione um arquivo PDF com os documentos principais do imóvel');
    }
  } else if (currentStep.dataset.step === '3') {
    // Validação para a terceira etapa (Informações do Imóvel - Parte 3)
    const tipoImovelSelect = document.getElementById('tipoImovel');
    const grandeSelect = document.getElementById('grande');
    const bemLocalizadoSelect = document.getElementById('bemLocalizado');
    const condominioFechadoSelect = document.getElementById('condominioFechado');
    const novoSelect = document.getElementById('novo');
    const estacionamentoSelect = document.getElementById('estacionamento');
    const aguaGratuitaSelect = document.getElementById('aguaGratuita');
    const iptuInclusoSelect = document.getElementById('iptuIncluso');

    if (tipoImovelSelect.value === '') {
      isValid = false;
      displayError(tipoImovelSelect, 'Selecione o tipo do imóvel');
    }

    if (grandeSelect.value === '') {
      isValid = false;
      displayError(grandeSelect, 'Informe se o imóvel é considerado grande ou não');
    }

    if (bemLocalizadoSelect.value === '') {
      isValid = false;
      displayError(bemLocalizadoSelect, 'Informe se o imóvel é bem localizado ou não');
    }

    if (condominioFechadoSelect.value === '') {
      isValid = false;
      displayError(condominioFechadoSelect, 'Informe se o imóvel está em um condomínio fechado ou não');
    }

    if (novoSelect.value === '') {
      isValid = false;
      displayError(novoSelect, 'Informe se o imóvel é novo ou usado');
    }

    if (estacionamentoSelect.value === '') {
      isValid = false;
      displayError(estacionamentoSelect, 'Informe se o imóvel possui estacionamento ou não');
    }

    if (aguaGratuitaSelect.value === '') {
      isValid = false;
      displayError(aguaGratuitaSelect, 'Informe se a água é gratuita no imóvel ou não');
    }

    if (iptuInclusoSelect.value === '') {
      isValid = false;
      displayError(iptuInclusoSelect, 'Informe se o IPTU está incluso no valor do aluguel ou não');
    }
  }else if (currentStep.dataset.step === '4') {
    // Validação para a quarta etapa (Informações de Endereço e Contato)
    const enderecoCEPInput = document.getElementById('enderecoCEP');
    const enderecoCidadeInput = document.getElementById('enderecoCidade');
    const estadoNomeSelect = document.getElementById('estadoNome');
    const enderecoRuaInput = document.getElementById('enderecoRua');
    const enderecoNumeroInput = document.getElementById('enderecoNumero');
    const enderecoBairroInput = document.getElementById('enderecoBairro');
    const telefoneContatoInput = document.getElementById('telefoneContato');
    const emailContatoInput = document.getElementById('emailContato');

    // Validação para o CEP (deve conter 8 dígitos)
    if (!validateCEP(enderecoCEPInput.value)) {
      isValid = false;
      displayError(enderecoCEPInput, 'Digite um CEP válido com 8 dígitos');
    }

    if (enderecoCidadeInput.value.trim() === '') {
      isValid = false;
      displayError(enderecoCidadeInput, 'Informe a cidade correta');
    }

    if (estadoNomeSelect.value === '') {
      isValid = false;
      displayError(estadoNomeSelect, 'Selecione o estado');
    }

    if (enderecoRuaInput.value.trim() === '') {
      isValid = false;
      displayError(enderecoRuaInput, 'Informe a rua correta');
    }

    if (enderecoNumeroInput.value.trim() === '') {
      isValid = false;
      displayError(enderecoNumeroInput, 'Informe o número do imóvel correto');
    }

    if (enderecoBairroInput.value.trim() === '') {
      isValid = false;
      displayError(enderecoBairroInput, 'Informe o bairro correto');
    }

    // Validação para o telefone de contato (deve conter apenas números e DDD)
    if (!validateTelefone(telefoneContatoInput.value)) {
      isValid = false;
      displayError(telefoneContatoInput, 'Digite um telefone de contato válido (DDD e número)');
    }

    // Validação para o email de contato
    if (!validateEmail(emailContatoInput.value)) {
      isValid = false;
      displayError(emailContatoInput, 'Digite um email válido');
    }
  }


  return isValid;
}
function clearError(input) {
  const errorDiv = input.nextElementSibling;
  if (errorDiv) {
    errorDiv.textContent = '';
  }
  input.classList.remove('border', 'border-red-500');
}

// Função para exibir mensagens de erro
function displayError(element, errorMessage) {
  const errorContainer = element.parentElement.querySelector('.error-message');

  if (errorContainer) {
    errorContainer.textContent = errorMessage;
    errorContainer.style.display = 'block';
  }
}

// Função para validar RG (8 ou 9 dígitos)
function validateRG(rg) {
  const rgPattern = /^\d{8}|\d{9}$/;
  return rgPattern.test(rg);
}

// Função para validar CPF (11 dígitos)
function validateCPF(cpf) {
  cpf = cpf.replace(/\D/g, ''); // Remove caracteres não numéricos
  if (cpf.length !== 11) {
    return false;
  }

  function validateEmail(email) {
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return emailRegex.test(email);
  }

  // Função para validar CEP (8 dígitos)
function validateCEP(cep) {
  const cepPattern = /^\d{8}$/;
  return cepPattern.test(cep);
}

  // Verifica se todos os dígitos são iguais (situação inválida)
  if (/^(\d)\1+$/.test(cpf)) {
    return false;
  }

  const cpfArray = cpf.split('').map(Number);

  // Calcula o primeiro dígito verificador
  let sum = 0;
  for (let i = 0; i < 9; i++) {
    sum += cpfArray[i] * (10 - i);
  }
  let remainder = (sum * 10) % 11;
  if (remainder === 10 || remainder === 11) {
    remainder = 0;
  }
  if (remainder !== cpfArray[9]) {
    return false;
  }

  // Calcula o segundo dígito verificador
  sum = 0;
  for (let i = 0; i < 10; i++) {
    sum += cpfArray[i] * (11 - i);
  }
  remainder = (sum * 10) % 11;
  if (remainder === 10 || remainder === 11) {
    remainder = 0;
  }
  if (remainder !== cpfArray[10]) {
    return false;
  }

  return true;
}



// Função para validar extensões de arquivo
function validateFileExtensions(input, allowedExtensions) {
  const fileName = input.value;
  const fileExtension = fileName.split('.').pop().toLowerCase();
  return allowedExtensions.includes(fileExtension);
}

</script>




<script>

  nextButtons.forEach(button => {
    button.addEventListener('click', (event) => {
      if (!validateForm()) {
        event.preventDefault(); 
      }
    });
  });
  

  function validateForm() {
  const form = document.getElementById('imovelForm');
  const tamanhoInput = document.getElementById('tamanho');
  const tituloInput = document.getElementById('titulo');
  
  const quantidadeComodosInput = document.getElementById('quantidadeComodos');
  const mobiliadoInput = document.getElementById('mobiliado');
  const statusNegociacaoInput = document.getElementById('statusNegociacao');
  const valorInput = document.getElementById('valor');
  const rgInput = document.getElementById('rgProprietario');
  const cpfInput = document.getElementById('cpfProprietario');
  const numeroInscricaoInput = document.getElementById('numeroInscricao');
  const descricaoInput = document.getElementById('descricao');
  const emailInput = document.getElementById('emailContato');

  const tipoImovelInput = document.getElementById('tipoImovel');
  const novoInput = document.getElementById('novo');
  const grandeInput = document.getElementById('grande');
  const bemLocalizadoInput = document.getElementById('bemLocalizado');
  const condominioFechadoInput = document.getElementById('condominioFechado');
  const estacionamentoInput = document.getElementById('estacionamento');
  const aguaGratuitaInput = document.getElementById('aguaGratuita');
  const iptuInclusoInput = document.getElementById('iptuIncluso');

  const enderecoCEPInput = document.getElementById("enderecoCEP");
  const enderecoRuaInput = document.getElementById("enderecoRua");
  const enderecoBairroInput = document.getElementById("enderecoBairro");
  const enderecoCidadeInput = document.getElementById("enderecoCidade");
  const estadoNomeInput = document.getElementById("estadoNome");
    
  

  form.addEventListener('submit', (event) => {
    let isValid = true;


    if (!validateEmail(emailInput.value)) {
      isValid = false;
      displayError(emailInput, 'Digite um email válido');
    }


    if (!/^[0-9]{8,9}$/.test(rgInput.value) || rgInput.value.length > rgInput.maxLength) {
      isValid = false;
      displayError(rgInput, 'Digite um RG válido com 8 a 9 dígitos');
    }
    
    if (!/^[0-9]{11}$/.test(cpfInput.value) || cpfInput.value.length > cpfInput.maxLength) {
      isValid = false;
      displayError(cpfInput, 'Digite um CPF válido com 11 dígitos');
    }

    if (!isValidCPF(cpfInput.value)) {
      isValid = false;
      displayError(cpfInput, 'Digite um CPF válido');
    }

    if (tamanhoInput.value <= 0) {
      isValid = false;
      displayError(tamanhoInput, 'O tamanho deve ser maior que 0');
    }

    if (quantidadeComodosInput.value <= 0) {
      isValid = false;
      displayError(quantidadeComodosInput, 'A quantidade de cômodos deve ser maior que 0');
    }

    if (valorInput.value <= 0) {
      isValid = false;
      displayError(valorInput, 'O valor deve ser maior que 0');
    }

    if (descricaoInput.value.length < 3) {
      isValid = false;
      displayError(descricaoInput, 'A descrição deve ter pelo menos 3 caracteres');
    }

    if (tituloInput.value.length < 3) {
      isValid = false;
      displayError(tituloInput, 'O título deve ter pelo menos 3 caracteres');
    }

    if (!validateEmail(emailInput.value)) {
      isValid = false;
      displayError(emailInput, 'Digite um email válido');
    }
    


    if (!isValid) {
      event.preventDefault();
    }

  });

  function validateEmail(email) {
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return emailRegex.test(email);
  }

  function clearError(input) {
    const errorDiv = input.nextElementSibling;
    if (errorDiv) {
      errorDiv.textContent = '';
    }
    input.classList.remove('border', 'border-red-500');
  }

  function displayError(input, message) {
    const errorDiv = input.nextElementSibling;
    errorDiv.textContent = message;
    input.classList.add('border', 'border-red-500');
  }


  


  tamanhoInput.addEventListener('input', () => clearError(tamanhoInput));
  tituloInput.addEventListener('input', () => clearError(tituloInput));
  quantidadeComodosInput.addEventListener('input', () => clearError(quantidadeComodosInput));
  mobiliadoInput.addEventListener('input', () => clearError(mobiliadoInput));
  statusNegociacaoInput.addEventListener('input', () => clearError(statusNegociacaoInput));
  valorInput.addEventListener('input', () => clearError(valorInput));
  rgInput.addEventListener('input', () => clearError(rgInput));
  cpfInput.addEventListener('input', () => clearError(cpfInput));
  numeroInscricaoInput.addEventListener('input', () => clearError(numeroInscricaoInput));
  descricaoInput.addEventListener('input', () => clearError(descricaoInput));
  emailInput.addEventListener('input', () => clearError(emailInput));

  tipoImovelInput.addEventListener('input', () => clearError(tipoImovelInput));
  novoInput.addEventListener('input', () => clearError(novoInput));
  grandeInput.addEventListener('input', () => clearError(grandeInput));
  bemLocalizadoInput.addEventListener('input', () => clearError(bemLocalizadoInput));
  condominioFechadoInput.addEventListener('input', () => clearError(condominioFechadoInput));
  estacionamentoInput.addEventListener('input', () => clearError(estacionamentoInput));
  aguaGratuitaInput.addEventListener('input', () => clearError(aguaGratuitaInput));
  iptuInclusoInput.addEventListener('input', () => clearError(iptuInclusoInput));

  enderecoCEPInput.addEventListener('input', () => clearError(enderecoCEPInput));
  enderecoRuaInput.addEventListener('input', () => clearError(enderecoRuaInput));
  enderecoBairroInput.addEventListener('input', () => clearError(enderecoBairroInput));
  enderecoCidadeInput.addEventListener('input', () => clearError(enderecoCidadeInput));
  estadoNomeInput.addEventListener('input', () => clearError(estadoNomeInput));



  rgInput.addEventListener('input', (event) => {
    event.target.value = event.target.value.replace(/\D/g, ''); 
  });

  cpfInput.addEventListener('input', (event) => {
    event.target.value = event.target.value.replace(/\D/g, ''); 
  });

  valorInput.addEventListener('input', (event) => {
    event.target.value = event.target.value.replace(/\D/g, ''); 
  });

  enderecoCEPInput.addEventListener('input', (event) => {
    event.target.value = event.target.value.replace(/\D/g, ''); 
  });


  function isValidCPF(cpf) {
    cpf = cpf.replace(/\D/g, ''); // Remove caracteres não numéricos
    if (cpf.length !== 11) {
      return false;
    }
  
    // Verifica se todos os dígitos são iguais (situação inválida)
    if (/^(\d)\1+$/.test(cpf)) {
      return false;
    }
  
    const cpfArray = cpf.split('').map(Number);
  
    // Calcula o primeiro dígito verificador
    let sum = 0;
    for (let i = 0; i < 9; i++) {
      sum += cpfArray[i] * (10 - i);
    }
    let remainder = (sum * 10) % 11;
    if (remainder === 10 || remainder === 11) {
      remainder = 0;
    }
    if (remainder !== cpfArray[9]) {
      return false;
    }
  
    // Calcula o segundo dígito verificador
    sum = 0;
    for (let i = 0; i < 10; i++) {
      sum += cpfArray[i] * (11 - i);
    }
    remainder = (sum * 10) % 11;
    if (remainder === 10 || remainder === 11) {
      remainder = 0;
    }
    if (remainder !== cpfArray[10]) {
      return false;
    }
  
    return true;
  }
  
  // Exemplos de uso:
  const cpf1 = '123.456.789-09';
  console.log(isValidCPF(cpf1)); // Deve retornar true
  
  const cpf2 = '111.222.333-44';
  console.log(isValidCPF(cpf2)); // Deve retornar false
  
  }

</script>





<script>

  document.addEventListener("DOMContentLoaded", function () {
    const enderecoCEP = document.getElementById("enderecoCEP");
    const enderecoRua = document.getElementById("enderecoRua");
    const enderecoBairro = document.getElementById("enderecoBairro");
    const enderecoCidade = document.getElementById("enderecoCidade");
    const estadoNome = document.getElementById("estadoNome");

    enderecoCEP.addEventListener("blur", function () {
      const cep = enderecoCEP.value.replace(/\D/g, "");

      if (cep.length === 8) {
        fetch(`https://viacep.com.br/ws/${cep}/json/`)
          .then((response) => response.json())
          .then((data) => {
            if (!data.erro) {
              enderecoRua.value = data.logradouro;
              enderecoBairro.value = data.bairro;
              enderecoCidade.value = data.localidade;
              estadoNome.value = data.uf;
            }
          })
          .catch((error) => {
            console.error("Erro ao buscar CEP:", error);
          });
      }
    });
  });

  
  function updateImageLabel(input) {
    const label = document.getElementById('fotosLabel');
    if (input.files.length > 0) {
      label.textContent = `${input.files.length} fotos selecionadas`;
    } else {
      label.textContent = 'Clique para selecionar fotos';
    }
  }

  function updatePDFLabel(input) {
    const label = document.getElementById('pdfDocumentLabel');
    if (input.files.length > 0) {
      label.textContent = `${input.files[0].name} selecionado`;
    } else {
      label.textContent = 'Clique para selecionar um PDF';
    }
  }

  const examplePhrases = [
  "Lindo apartamento com vista para o mar.",
  "Casa espaçosa com jardim e piscina.",
  "Sala comercial em uma localização privilegiada.",
  "Charmoso chalé nas montanhas.",
  "Imóvel ideal para famílias grandes.",
  "Apartamento moderno e bem iluminado.",
  "Casa térrea com amplo quintal.",
  "Sítio tranquilo e rodeado pela natureza.",
  "Cobertura de luxo com terraço panorâmico.",
  "Apartamento mobiliado em condomínio resort.",
  "Loja ampla com grande visibilidade.",
  "Casa com arquitetura contemporânea.",
  "Sala de escritório moderna e funcional.",
  "Apartamento próximo a parques e comércio.",
  "Casa com acabamentos de alta qualidade.",
  "Studio compacto e aconchegante.",
  "Terreno amplo em área valorizada.",
  "Apartamento duplex com design exclusivo.",
  "Casa charmosa em bairro arborizado.",
  "Loft espaçoso com pé-direito alto."
];

  const descricaoInput = document.getElementById('descricao');

  const randomIndex = Math.floor(Math.random() * examplePhrases.length);
  const randomPhrase = examplePhrases[randomIndex];
  descricaoInput.placeholder = randomPhrase;

</script>

<script>
  window.addEventListener('load', () => {
    populateFavoritesList();
  });
</script>
<script>
    
  const favoritesList = document.getElementById('favoritesList');

  async function getImovelData(imovelId) {
    try {
      const response = await fetch(`/imoveis/${imovelId}/relevant-fields`);
      if (response.ok) {
        const data = await response.json();
        const relevantData = {
          id: data.id,
          enderecoRua: data.enderecoRua,
          enderecoNumero: data.enderecoNumero,
          enderecoBairro: data.enderecoBairro,
          enderecoCidade: data.enderecoCidade,
          valor: data.valor
        };
        return relevantData;
      } else {
        console.error('Failed to fetch property data');
        return null;
      }
    } catch (error) {
      console.error('Error fetching property data:', error);
      return null;
    }
  }
  
  async function populateFavoritesList() {
    favoritesList.innerHTML = '';
  
    let hasFavoritedProperties = false;
    let favoritesCount = 0;
  
    for (let i = 0; i < localStorage.length; i++) {
      const key = localStorage.key(i);
      if (key.startsWith('liked_') && localStorage.getItem(key) === 'true') {
        const imovelId = key.substring(6);
        const imovel = await getImovelData(imovelId);
        if (imovel) {
          hasFavoritedProperties = true;
          favoritesCount++;
  
          const listItem = document.createElement('div');
          listItem.className = 'dropdown-item';
          const link = document.createElement('a');
          link.href = `/imoveis/informacoes-imovel/${imovelId}`;
  

  
          link.innerHTML = `

            <p><strong>Endereço:</strong> ${imovel.enderecoRua}, ${imovel.enderecoNumero}, ${imovel.enderecoBairro}, ${imovel.enderecoCidade}</p>
            <p><strong>Valor:</strong> R$ ${imovel.valor}</p>
            <hr>
          `;
          listItem.appendChild(link);
          favoritesList.appendChild(listItem);
        }
      }
    }
  
    const favoritesCountSpan = document.getElementById('favoritesCount');
    favoritesCountSpan.textContent = favoritesCount;
  
    if (!hasFavoritedProperties) {
      const noFavoritesMessage = document.createElement('div');
      noFavoritesMessage.className = 'dropdown-item';
      noFavoritesMessage.innerText = 'Nenhum imóvel curtido ainda ( ´•︵•` )';
      favoritesList.appendChild(noFavoritesMessage);
    }
  }
  
  const favoritesDropdown = document.getElementById('favoritesDropdown');
  favoritesDropdown.addEventListener('click', populateFavoritesList);
  

</script>




<!-- Scripts JavaScript -->
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.3/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/alpinejs@2.8.2/dist/alpine.min.js" defer></script>

</body>
</html>